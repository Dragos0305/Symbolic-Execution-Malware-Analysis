import angr
import networkx

"""

    Class for extracting malware static features and compute CFG

"""

class Binary:
    
    cfg: networkx.classes.digraph.DiGraph    


    def __init__(self, project: angr.Project) -> None:
        self.__extract_static_features(project)
        self.__generate_cfg(project)

    # TODO: extract static stuff: arch, symbols, loaded libraries etc.
    def __extract_static_features(self, project : angr.Project):
        pass

    # TODO: Use angr to create networkx object for CFG 
    def __generate_cfg(self, project: angr.Project):
        self.cfg = project.analyses.CFGFast()        
        

